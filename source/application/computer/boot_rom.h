#pragma once
#include "./bus.h"
#include "application/settings.h"

struct boot_rom_t {

	pri st cexp u8 memory[settings::boot_rom_size] = {
		0xFF, 0x6F, 0xF0, 0x6F, 0xFF, 0xAF, 0xFF, 0x6F, 0xFD, 0x6F, 0xFD, 0x1F, 0x0A, 0xCF, 0xFF, 0x6F,
		0xFD, 0x1F, 0x00, 0x7E, 0x01, 0x80, 0x1A, 0xEF, 0x06, 0xBF, 0xF0, 0x1F, 0x0E, 0x30, 0x3E, 0xCF,
		0xFF, 0x6F, 0xF8, 0x6F, 0xF8, 0x6F, 0x0E, 0x00, 0xF8, 0x6F, 0xF8, 0x6F, 0xF0, 0x1F, 0xF8, 0x6F,
		0xF8, 0x6F, 0x01, 0x00, 0xF8, 0x6F, 0xF0, 0x1F, 0x01, 0x00, 0xF0, 0x6F, 0x04, 0xBF, 0x00, 0xB0,
	};

	pub void tick() {
		u16 i = bus.address - settings::boot_rom_base;
		if (i < settings::boot_rom_size) {
			if (bus.control == bus.read) bus.data = memory[i];
		}
	}
};

st boot_rom_t boot_rom;
